# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  pull_request:
    types:
      - opened

name: prepare-pull-request

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-tinytex@v2
      - run: |
          tlmgr --version
          tlmgr update --self

      - name: Install additional LaTeX packages
        run: |
          tlmgr install preprint
          tlmgr install listings
          tlmgr install tcolorbox
          tlmgr install pgf
          tlmgr install environ
          tlmgr install tikzfill
          tlmgr install pdfcol
          tlmgr install grfext
          tlmgr list --only-installed

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          build_args: 'c("--compact-vignettes=gs+qpdf")'

  document:
    runs-on: ubuntu-latest
    needs: R-CMD-check
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::roxygen2
          needs: roxygen2

      - name: Document
        run: roxygen2::roxygenise()
        shell: Rscript {0}

      - name: Commit and push changes
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add man/\* NAMESPACE DESCRIPTION
          git commit -m "Update documentation" || echo "No changes to commit"
          git pull --ff-only
          git push origin

  line-break-fix:
    runs-on: ubuntu-latest
    needs: document
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up dos2unix
        run: sudo apt-get install dos2unix

      - name: Run dos2unix
        run: |
          find ./R -type f -name "*.R" -exec dos2unix {} \;
          find ./tests/testthat -type f -name "*.R" -exec dos2unix {} \;

      - name: Commit and push changes
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add ./R/*.R
          git add ./tests/testthat/*.R
          git commit -m "Conversion of R files from CRLF to LF" || echo "No changes to commit"
          git pull --ff-only
          git push origin

  document-version:
    runs-on: ubuntu-latest
    needs: line-break-fix
    if: contains(github.event.pull_request.changed_files, 'CHANGELOG.md')
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CHANGELOG: "CHANGELOG.md"
      DESCRIPTION: "DESCRIPTION"
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Extract release version from first level 4 heading
        id: extract-version
        run: |
          version=$(grep -oP '####[^0-9]*\K\d+\.\d+\.\d+' -m 1 $CHANGELOG)
          echo "version=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "Version: $version"

      - name: Get current UTC timestamp
        id: get-timestamp
        run: |
          timestamp=$(date -u +"%Y.%m.%d.%H%M")
          echo "timestamp=$timestamp" >> $GITHUB_ENV
          echo "Timestamp: $timestamp"

      - name: Standardize first level 4 heading
        id: update-change-header
        run: |
          timestamp=$(echo "${{ env.timestamp }}" | awk -F'.' '{print $1"."$2"."$3}')
          sed -i "0,/^####.*$/s/^####.*$/#### Version ${{ env.version }} \($timestamp\)/" $CHANGELOG
          echo "CHANGELOG Timestamp: $timestamp"

      - name: Update DESCRIPTION `Version` and `Date`
        id: update-description
        run: |
          timestamp=$(echo "${{ env.timestamp }}" | awk -F'.' '{print $1"-"$2"-"$3}')
          sed -i "s|^Date:.*$|Date: $timestamp|" $DESCRIPTION
          sed -i "s|^Version:.*$|Version: ${{ env.version }}|" $DESCRIPTION
          echo "DESCRIPTION Timestamp: $timestamp"

      - name: Update `version` comments on R files
        id: update-r-version-comment
        run: |
          cd .github/scripts
          chmod +x update_version_tag.py
          python update_version_tag.py ${{ env.timestamp }}

      - name: Commit and push changes
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add ./R/*.R
          git add DESCRIPTION
          git add CHANGELOG.md
          git commit -m "Update documentation for version" || echo "No changes to commit"
          git pull --ff-only
          git push origin
