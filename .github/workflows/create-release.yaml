# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  pull_request:
    types:
      - closed
    paths: ["CHANGELOG.md"]

name: create-release

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CHANGELOG: "CHANGELOG.md"
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-tinytex@v2
      - run: |
          tlmgr --version
          tlmgr update --self

      - name: Install additional LaTeX packages
        run: |
          tlmgr install preprint
          tlmgr install listings
          tlmgr install tcolorbox
          tlmgr install pgf
          tlmgr install environ
          tlmgr install tikzfill
          tlmgr install pdfcol
          tlmgr install grfext
          tlmgr list --only-installed

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: "release"
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Build R package
        run: |
          R CMD build --compact-vignettes=gs+qpdf .
          tar_file="$(find . -maxdepth 1 -type f -name '*.tar.gz' -print -quit | sed 's|^\./||')"
          artifacts="artifacts"
          mkdir $artifacts
          mv $tar_file "$artifacts/"
          echo "tar_file=$artifacts/$tar_file" >> $GITHUB_ENV
          echo "asset_name=$tar_file" >> $GITHUB_ENV

      - name: Make release properties
        id: release-fields
        run: |
          version="${{ needs.release-documentation.outputs.version }}"
          echo "version=$version" >> $GITHUB_ENV
          echo "Version: $version"
          tag="v${version}"
          echo "tag=$tag" >> $GITHUB_ENV
          echo "Tag: $tag"
          name="Version ${version}"
          echo "name=$name" >> $GITHUB_ENV
          echo "Name: $name"
          body="$(awk '/^\*.*$/{print; next} /^####/{count++; if(count==2) exit}' $CHANGELOG)"
          echo "body<<EOF" >> "$GITHUB_ENV"
          echo "$body" >> "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"
          echo "Body: $body"

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          release_name: ${{ env.name }}
          draft: false
          prerelease: false
          body: |
            ${{ env.body }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ env.tar_file }}
          asset_name: ${{ env.asset_name }}
          asset_content_type: application/gzip
